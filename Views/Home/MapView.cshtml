
@{
    ViewData["Title"] = "MapView";
}

@section Styles {


    <link href="~/lib/leaflet/leaflet.css" rel="stylesheet" />
    <style>

        .leaflet-popup-content {
            width: auto !important;
            min-width: 340px;
        }

        .leaflet-popup-close-button {
            top: 2px !important;
            right: 3px !important;
        }

        .checkbox > label {
            margin-bottom: 4px;
        }

        .admin-bds {
            width: 100%;
            margin: 0;
            padding: 0;
        }

            .admin-bds > .row {
                border-color: #ccc;
                border-style: solid;
                border-width: 0 0 1px 0;
                margin: 0 3px 0 12px;
                padding: 0;
                /*background-color: #fcfeff;*/
            }

                .admin-bds > .row > [class*="col-"] {
                    border: 0 none;
                    margin: 0;
                    padding: 3px;
                }

                .admin-bds > .row > [class*="col-sm-3"] {
                    text-align: center;
                }

        #mapid {
            height: 400px;
        }

        .legend {
            line-height: 18px;
            color: #555;
        }

            .legend i {
                width: 18px;
                height: 18px;
                float: left;
                margin-right: 8px;
                opacity: 0.7;
            }

        .info {
            padding: 6px 8px;
            font: 14px/16px Arial, Helvetica, sans-serif;
            background: white;
            background: rgba(255,255,255,0.8);
            box-shadow: 0 0 15px rgba(0,0,0,0.2);
            border-radius: 5px;
        }

            .info h4 {
                margin: 0 0 5px;
                color: #777;
            }
    </style>

}

<div id="mapid"></div>

@section Scripts {

    @*access token : pk.eyJ1IjoibW9zaGl1cmNzZSIsImEiOiJjazE0Z3R3eHowaW1xM21weW9lc283ODR5In0.CVXnj83FaFxqx897botGig*@

    <script src="~/lib/leaflet/leaflet.js"></script>
    @*<script src="~/maps/map_data/Division1.js"></script>*@
    @*<script src="~/maps/map_data/boundary/division.js"></script>*@
    @*<script src="~/maps/map_data/boundary/district.js"></script>*@
    @*<script src="~/maps/map_data/boundary/upazila.js"></script>*@

    @*<script src="~/maps/map_data/boundary/upazilaMain.js"></script>*@
    <script src="~/maps/map_data/boundary/District_WGS84.js"></script>
    @*<script src="~/maps/map_data/districtMain.js"></script>*@
    <script>

        var geojson;
        var mymap = L.map('mapid').setView([23.777176, 90.399452], 7);
  

        //L.tileLayer('https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/512/1/1/0@2x?access_token=pk.eyJ1IjoibW9zaGl1cmNzZSIsImEiOiJjazExcGZ4bjAwaXltM2NyaDdhajlyd2FkIn0.c_SEmtkCpdNmBpogXYkUng', {
        //    //attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        //    maxZoom: 24,
        //    id: 'mapbox/streets-v11',
        //    accessToken: 'pk.eyJ1IjoibW9zaGl1cmNzZSIsImEiOiJjazExcGZ4bjAwaXltM2NyaDdhajlyd2FkIn0.c_SEmtkCpdNmBpogXYkUng'
        //}).addTo(mymap);

        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            //attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 14,
            id: 'MapID',
            // accessToken: 'pk.eyJ1IjoibW9zaGl1cmNzZSIsImEiOiJjazExcGZ4bjAwaXltM2NyaDdhajlyd2FkIn0.c_SEmtkCpdNmBpogXYkUng'
        }).addTo(mymap);





        //console.log("OK", district.features);

        //upazila.features[0].properties.THACODE

        //for (var i = 0; i < district.features.length; i++) {
        //    console.log("Thana Code: ", district.features[i].properties.TOTAL);
        //}


       
        //L.geoJSON(upazila.features, {
        //    style: function (feature) {

        //        switch (feature.properties.party) {
        //            case 'Republican': return { color: "#ff0000" };
        //            case 'Democrat': return { color: "#0000ff" };
        //        }
        //    },

        //}).addTo(mymap);


        geojson = L.geoJson(district.features, {
            style: style,
            onEachFeature: onEachFeature
        }).addTo(mymap);



        function getColor(d) {
            return d > 1500000 ? '#800026' :
                d > 1400000 ? '#BD0026' :
                    d > 1200000 ? '#E31A1C' :
                        d > 1000000 ? '#FC4E2A' :
                            d > 800000 ? '#FD8D3C' :
                                d > 600000 ? '#FEB24C' :
                                    d > 400000 ? '#FED976' :
                                        '#FFEDA0';
        }


        // grades = [0, 400000, 600000, 800000, 1000000, 1200000, 1400000, 1500000],

        function style(feature) {

             console.log("feature", feature);
            return {
                fillColor: getColor(feature.properties.TOTAL),
                weight: 1,
                opacity: 1,
                //color: '#5FB961',
                color: getColor(feature.properties.TOTAL),
                dashArray: '1',
                fillOpacity: 0.5
            };
        }

        function onEachFeature(feature, layer) {
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: zoomToFeature
            });
        }

        function highlightFeature(e) {
            var layer = e.target;

            layer.setStyle({
                weight: 5,
                color: '#E11F21',
                dashArray: '',
                fillOpacity: 0.4
            });

            info.update(layer.feature.properties);

            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                layer.bringToFront();
            }
        }

        function resetHighlight(e) {
            //style(e.target);


            //layer.setStyle({
            //    weight: 5,
            //    color: '#f00',
            //    dashArray: '',
            //    fillOpacity: 0.7
            //});
            geojson.resetStyle(e.target);
            info.update();

            //sdfdsf

        }

        function zoomToFeature(e) {
            mymap.fitBounds(e.target.getBounds());
        }


        var legend = L.control({ position: 'bottomright' });

        legend.onAdd = function (map) {

            var div = L.DomUtil.create('div', 'info legend'),
                grades = [0, 400000, 600000, 800000, 1000000, 1200000, 1400000, 1500000],
                labels = [];

            // loop through our density intervals and generate a label with a colored square for each interval

            for (var i = 0; i < grades.length; i++) {

                div.innerHTML +=
                    '<p><i style="background:' + getColor(grades[i] + 1) + '"></i> ' +

                    grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '</p>' : '+');
            }

            return div;
        };

        legend.addTo(mymap);


        //Pop Up Window

        var info = L.control();

        info.onAdd = function (map) {
            this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
            this.update();
            return this._div;
        };

        // method that we will use to update the control based on feature properties passed

        info.update = function (props) {
            this._div.innerHTML = '<h4>Bangladesh Populatoin</h4>' + (props ?
                '<b>' + props.DISTNAME + '</b> : ' + props.TOTAL + ' people'  /// mi<sup>2</sup>
                : 'Hover over a district');
        };


        info.addTo(mymap);

                                                        //marker.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();
                                                        //circle.bindPopup("I am a circle.");
                                                        //polygon.bindPopup("I am a polygon.");


    </script>


}